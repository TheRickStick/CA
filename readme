The application is hosted on the Cyclic.sh platform and utilizes basic authentication.
You can visit the application by going to https://busy-jade-wombat-belt.cyclic.app
The default admin user credentials are as follows:

Username: admin
Password: P4ssword
Access to the application's endpoints is restricted to the authenticated admin user.

Installation and Configuration
Clone the repository from GitHub.
Install the required dependencies using npm install.
Create a .env file in the root directory of the application and configure the following environment variables:
CYCLIC_BUCKET_NAME=cyclic-busy-jade-wombat-belt-eu-north-1
CYCLIC_DB=busy-jade-wombat-beltCyclicDB
BASE_URL=https://busy-jade-wombat-belt.cyclic.app/



API Endpoints
Participant List
POST /participants/add: Adds the provided participant's data to the database. The request body should contain all participant details in JSON format.

GET /participants: Returns a list of all participants in a JSON object.

Participant Details
GET /participants/details: Returns the personal details (including first name and last name) of all active participants.

GET /participants/details/deleted: Returns the personal details (including first name and last name) of all deleted participants.

GET /participants/details/:email: Returns the personal details (including first name, last name, and active status) of the specified participant with the given email. Only participants who are not deleted will be returned.

GET /participants/work/:email: Returns the work details (including company name, salary, and currency) of the specified participant with the given email. Only participants who are not deleted will be returned.

GET /participants/home/:email: Returns the home details (including country and city) of the specified participant with the given email. Only participants who are not deleted will be returned.

Deleting / Updating the Participant
DELETE /participants/:email: Soft-deletes the participant with the provided email from the database. Only requests from the authenticated admin user can perform this operation.

PUT /participants/:email: Updates the participant with the provided email in the database. The request body should contain the updated participant details in JSON format. Only requests from the authenticated admin user can perform this operation.

Testing
You can test the application and its API endpoints using Postman. Ensure that you have authenticated as the admin user using basic authentication with the provided credentials. Submit the requests to the corresponding endpoints with the required parameters and data.

Please use this format to add or update participants in Postman: 
{
  "firstname": "John",
  "lastname": "Doe",
  "dob": "1990-01-01",
  "active": false,
  "work": {
    "companyname": "NewTechCorp",
    "salary": 75000,
    "currency": "USD"
  },
  "home": {
    "country": "USA",
    "city": "Los Angeles"
  }
}

You can use whatever name or other data you see fit, but please remember to put in all the values correctly otherwise you will receive an error message. 
